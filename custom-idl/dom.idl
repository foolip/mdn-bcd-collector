// https://www.w3.org/TR/DOM-Level-3-Core/idl-definitions.html

typedef any DOMUserData;
typedef object DOMObject;

partial interface Document {
  readonly attribute DOMString xmlEncoding;
  attribute boolean xmlStandalone;
  readonly attribute DOMString xmlVersion;
};

[Exposed=Window]
interface DOMError {
  readonly attribute DOMString message;
  readonly attribute DOMString type;
  readonly attribute DOMString name;
};

[Exposed=Window]
callback interface DOMErrorHandler {
  boolean handleError(DOMError error);
};

// Non-standard stuff

partial interface Document {
  // https://developer.mozilla.org/en-US/docs/Web/API/Document#Non-standard_extensions
  boolean contains();

  // https://developer.mozilla.org/en-US/docs/Web/API/Document/mozSetImageElement
  undefined mozSetImageElement(DOMString imageElementId, Element? imageElement);

  // https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600
  undefined releaseCapture();
};

partial interface Element {
  // https://www.w3.org/Bugs/Public/show_bug.cgi?id=14600
  undefined setCapture(optional boolean retargetToElement);
};

partial interface Event {
  // https://developer.mozilla.org/en-US/docs/Web/API/Event/explicitOriginalTarget
  readonly attribute EventTarget? explicitOriginalTarget;
  // https://developer.mozilla.org/en-US/docs/Web/API/Event/originalTarget
  readonly attribute EventTarget? originalTarget;
};

partial interface Range {
  short compareNode(Node node);

  readonly attribute boolean collapsed;
  readonly attribute Node endContainer;
  readonly attribute long endOffset;
  readonly attribute Node startContainer;
  readonly attribute long startOffset;
};

partial interface StaticRange {
  readonly attribute boolean collapsed;
  readonly attribute Node startContainer;
  readonly attribute unsigned long startOffset;
  readonly attribute Node endContainer;
  readonly attribute unsigned long endOffset;
};
