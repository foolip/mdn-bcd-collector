// https://www.w3.org/TR/2012/WD-file-system-api-20120417/

// This is (hopefully) the delta between the old spec and
// https://wicg.github.io/entries-api/, with adjusted names/types, and
// [Exposed=Window,Worker] to test it everywhere, just to be safe.

callback MetadataCallback = undefined (Metadata metadata);
callback FileSystemCallback = undefined (FileSystem fileSystem);
callback FileWriterCallback = undefined (FileWriter fileWriter);

interface mixin LocalFileSystem {
  const unsigned short TEMPORARY = 0;
  const unsigned short PERSISTENT = 1;
  undefined requestFileSystem(unsigned short type, unsigned long long size, FileSystemCallback successCallback, optional ErrorCallback errorCallback);
  undefined resolveLocalFileSystemURL(DOMString url, FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
};
Window includes LocalFileSystem;
WorkerGlobalScope includes LocalFileSystem;

interface mixin LocalFileSystemSync {
  // const unsigned short TEMPORARY = 0;
  // const unsigned short PERSISTENT = 1;
  FileSystemSync requestFileSystemSync(unsigned short type, unsigned long long size);
  EntrySync resolveLocalFileSystemSyncURL(DOMString url);
};
WorkerGlobalScope includes LocalFileSystemSync;

[Exposed=Window,Worker]
interface Metadata {
 readonly attribute Date modificationTime;
 readonly attribute unsigned long long size;
};

partial interface FileSystemEntry {
  undefined getMetadata(MetadataCallback successCallback, optional ErrorCallback errorCallback);
  undefined moveTo(FileSystemDirectoryEntry parent, optional DOMString name, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  undefined copyTo(FileSystemDirectoryEntry parent, optional DOMString name, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  DOMString toURL();
  undefined remove(undefinedFunction successCallback, optional ErrorCallback errorCallback);
};

partial interface FileSystemFileEntry {
  undefined createWriter(FileWriterCallback successCallback,
                    optional ErrorCallback errorCallback);
};

// FileSystem is here: https://wicg.github.io/entries-api/#api-domfilesystem

[Exposed=Window,Worker]
interface FileSystemSync {
  readonly attribute DOMString name;
  readonly attribute DirectoryEntrySync root;
};

[Exposed=Window,Worker]
interface DirectoryEntry {
  DirectoryReader createReader();
  undefined getFile(DOMString path, optional FileSystemFlags options, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  undefined getDirectory(DOMString path, optional FileSystemFlags options, optional FileSystemEntryCallback successCallback, optional ErrorCallback errorCallback);
  undefined removeRecursively(undefinedFunction successCallback, optional ErrorCallback errorCallback);
};

[Exposed=Window,Worker]
interface DirectoryEntrySync {
  DirectoryReaderSync createReader();
  FileEntrySync getFile(DOMString path, optional FileSystemFlags options = {});
  DirectoryEntrySync getDirectory(DOMString path, optional FileSystemFlags options = {});
  undefined removeRecursively();
};

// The old names of things, before FileSystem prefixing
[Exposed=Window,Worker] interface DirectoryReader {};
[Exposed=Window,Worker] interface DirectoryReaderSync {};
[Exposed=Window,Worker] interface Entry {};
[Exposed=Window,Worker] interface EntrySync {};
[Exposed=Window,Worker] interface FileEntry {};
[Exposed=Window,Worker] interface FileEntrySync {};

// In BCD, but not the old spec
[Exposed=Window,Worker] interface FileError {};
[Exposed=Window,Worker] interface FileException {};
