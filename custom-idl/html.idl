// https://github.com/whatwg/html/pull/6153
// https://html.spec.whatwg.org/commit-snapshots/27ca698a224a4fcf59b647be80a0c86c3c6abba5/#applicationcache
[SecureContext, Exposed=Window]
interface ApplicationCache : EventTarget {
  // update status
  const unsigned short UNCACHED = 0;
  const unsigned short IDLE = 1;
  const unsigned short CHECKING = 2;
  const unsigned short DOWNLOADING = 3;
  const unsigned short UPDATEREADY = 4;
  const unsigned short OBSOLETE = 5;
  readonly attribute unsigned short status;

  // updates
  undefined update();
  undefined abort();
  undefined swapCache();

  // events
  attribute EventHandler onchecking;
  attribute EventHandler onerror;
  attribute EventHandler onnoupdate;
  attribute EventHandler ondownloading;
  attribute EventHandler onprogress;
  attribute EventHandler onupdateready;
  attribute EventHandler oncached;
  attribute EventHandler onobsolete;
};

// https://github.com/whatwg/html/pull/1942
dictionary HitRegionOptions {
  Path2D? path = null;
  CanvasFillRule fillRule = "nonzero";
  DOMString id = "";
  DOMString? parentID = null;
  DOMString cursor = "inherit";
  // for control-backed regions:
  Element? control = null;
  // for unbacked regions:
  DOMString? label = null;
  DOMString? role = null;
};

// https://github.com/whatwg/html/pull/1225
// https://html.spec.whatwg.org/commit-snapshots/927fda0f305452a9c54a25d3ebf9a6ed5ae29fd3/#htmlmediaelement
// https://html.spec.whatwg.org/commit-snapshots/927fda0f305452a9c54a25d3ebf9a6ed5ae29fd3/#mediacontroller

partial interface HTMLMediaElement {
  [CEReactions] attribute DOMString mediaGroup;
  attribute MediaController? controller;
};

enum MediaControllerPlaybackState { "waiting", "playing", "ended" };
[Exposed=Window]
interface MediaController : EventTarget {
  constructor();

  readonly attribute TimeRanges buffered;
  readonly attribute TimeRanges seekable;
  readonly attribute unrestricted double duration;
  attribute double currentTime;

  readonly attribute boolean paused;
  readonly attribute MediaControllerPlaybackState playbackState;
  readonly attribute TimeRanges played;
  undefined pause();
  undefined unpause();
  undefined play(); // calls play() on all media elements as well

  attribute double defaultPlaybackRate;
  attribute double playbackRate;

  attribute double volume;
  attribute boolean muted;
};

// https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/html/HTMLVideoElement.idl?rev=267813#L63
enum VideoPresentationMode { "inline", "fullscreen", "picture-in-picture" };

// https://github.com/whatwg/html/pull/7874
typedef record<DOMString, any> CanvasFilterInput;

[Exposed=(Window,Worker,PaintWorklet)]
interface CanvasFilter {
  constructor(optional (CanvasFilterInput or sequence<CanvasFilterInput>) filters);
};

// https://hg.mozilla.org/mozilla-central/file/a451ebba378efcce0967e508a8107ab14dd5edcb/dom/webidl/DataTransfer.webidl#l44
partial interface DataTransfer {
  undefined addElement(Element element);
  attribute DOMString mozCursor;
  readonly attribute boolean mozUserCancelled;
  readonly attribute Node? mozSourceNode;
};

dictionary ElementRegistrationOptions {
  object? prototype = null;
  DOMString? extends = null;
};

partial interface Document {
  // https://chromium.googlesource.com/chromium/src.git/+/24e58b0d8fab28fa20e69f191d833fe97aaff75d
  any getCSSCanvasContext(DOMString contextId, DOMString name, long width, long height);

  // https://github.com/whatwg/html/pull/1103
  attribute EventHandler onafterscriptexecute;
  attribute EventHandler onbeforescriptexecute;

  any registerElement(DOMString type, optional ElementRegistrationOptions options = {});
};

partial interface mixin GlobalEventHandlers {
  // https://github.com/mozilla/gecko-dev/blob/ffdb6a4d934b3f5294f18cf0e1df618109ccb36b/dom/webidl/EventHandler.webidl#L47
  attribute EventHandler ondragexit;

  // https://github.com/mozilla/gecko-dev/blob/ffdb6a4d934b3f5294f18cf0e1df618109ccb36b/dom/webidl/EventHandler.webidl#L65
  attribute EventHandler onloadend;

  // https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/dom/global_event_handlers.idl;l=76;drc=7a26ab64ceec9a43266fb544ab09adbe641504e3
  attribute EventHandler onmousewheel;

  // https://github.com/whatwg/html/issues/667
  attribute EventHandler onsearch;

  // https://github.com/mozilla/gecko-dev/blob/ffdb6a4d934b3f5294f18cf0e1df618109ccb36b/dom/webidl/EventHandler.webidl#L87
  attribute EventHandler onshow;
};

partial interface HTMLCanvasElement {
  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/mozOpaque
  attribute boolean mozOpaque;
};

// https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/core/html/html_content_element.idl
[Exposed=Window] interface HTMLContentElement : HTMLElement {
  [Reflect] attribute DOMString select;
  NodeList getDistributedNodes();
};

// https://github.com/whatwg/html/issues/4792
[Exposed=Window]
interface HTMLDocument : Document {
};

partial interface HTMLElement {
  attribute HTMLMenuElement? contextMenu;
};

partial interface HTMLFrameSetElement {
  attribute EventHandler onorientationchange;
};

partial interface HTMLHeadElement {
  attribute DOMString profile;
};

partial interface HTMLImageElement {
  attribute EventHandler onerror;
};

partial interface HTMLInputElement {
  // https://github.com/whatwg/html/issues/667
  attribute boolean incremental;

  attribute EventHandler onsearch;
};

partial interface HTMLMarqueeElement {
  // https://github.com/whatwg/html/pull/6343
  attribute EventHandler onbounce;
  attribute EventHandler onfinish;
  attribute EventHandler onstart;
};

partial interface HTMLMediaElement {
  readonly attribute DOMTokenList controlsList;
  attribute EventHandler onerror;
  Promise<undefined> seekToNextFrame();

  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#Obsolete_attributes
  readonly attribute boolean mozAudioCaptured;
  readonly attribute double mozFragmentEnd;

  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#Obsolete_methods
  MediaStream mozCaptureStreamUntilEnded();
  object mozGetMetadata();
};

// https://www.w3.org/TR/html51/interactive-elements.html#htmlmenuelement-htmlmenuelement
partial interface HTMLMenuElement {
  attribute DOMString type;
  attribute DOMString label;
};

// https://www.w3.org/TR/html51/interactive-elements.html#htmlmenuitemelement-htmlmenuitemelement
[Exposed=Window]
interface HTMLMenuItemElement : HTMLElement {
  attribute DOMString type;
  attribute DOMString label;
  attribute DOMString icon;
  attribute boolean disabled;
  attribute boolean checked;
  attribute DOMString radiogroup;
  attribute boolean default;
};

[Exposed=Window]
interface HTMLShadowElement : HTMLElement {
  NodeList getDistributedNodes();
};

partial interface HTMLTextAreaElement {
  // https://github.com/mdn/browser-compat-data/issues/7519
  attribute DOMString autocapitalize;
};

partial interface HTMLVideoElement {
  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement#Gecko-specific_properties
  readonly attribute unsigned long mozParsedFrames;
  readonly attribute unsigned long mozDecodedFrames;
  readonly attribute unsigned long mozPresentedFrames;
  readonly attribute unsigned long mozPaintedFrames;
  readonly attribute double mozFrameDelay;
  readonly attribute boolean mozHasAudio;
};

partial interface MouseEvent {
  // https://github.com/whatwg/html/pull/1942
  readonly attribute DOMString? region;
};

partial dictionary MouseEventInit {
  // https://github.com/whatwg/html/pull/1942
  DOMString? region = null;
};

partial interface Navigator {
  attribute any authentication;
  readonly attribute DOMString buildID;
  readonly attribute DOMString doNotTrack;
};

partial interface Plugin {
  readonly attribute DOMString version;
};

partial interface Window {
  long webkitRequestAnimationFrame(FrameRequestCallback callback);
  undefined webkitCancelRequestAnimationFrame(long id);
  undefined webkitCancelAnimationFrame(long id);

  // https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741363(v=vs.85)
  // https://bugs.chromium.org/p/chromium/issues/detail?id=692835
  attribute DOMString defaultStatus;
  attribute DOMString defaultstatus;

  // https://github.com/whatwg/html/issues/3539
  boolean find(optional DOMString string = "",
               optional boolean caseSensitive = false,
               optional boolean backwards = false,
               optional boolean wrap = false,
               optional boolean wholeWord = false,
               optional boolean searchInFrames = false,
               optional boolean showDialog = false);

  // https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741479(v=vs.85)
  // https://bugs.chromium.org/p/chromium/issues/detail?id=438370
  readonly attribute boolean offscreenBuffering;

  CSSStyleDeclaration getDefaultComputedStyle(Element element, DOMString? pseudoAlt);
  undefined scrollByLines();
  undefined scrollByPages();
  undefined scrollMaxX();
  undefined scrollMaxY();
  undefined setResizable();
  undefined showModalDialog();
  undefined sizeToContent();
  undefined updateCommands();

  readonly attribute double mozInnerScreenX;
  readonly attribute double mozInnerScreenY;
};

partial interface WorkerGlobalScope {
  // https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/dump
  undefined dump(any... data);
};
