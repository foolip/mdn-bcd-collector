// https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/modules/payments/abort_payment_event.idl;drc=c2e7d4f0b24814b0d1c51a964db34ec5b4930756
// https://github.com/w3c/payment-handler/pull/207
[Exposed=ServiceWorker]
interface AbortPaymentEvent : ExtendableEvent {
  constructor(DOMString type, optional ExtendableEventInit eventInitDict = {});
  undefined respondWith(Promise<boolean> paymentAbortedResponse);
};
partial interface ServiceWorkerGlobalScope {
  attribute EventHandler onabortpayment;
};

// https://github.com/w3c/payment-handler/pull/170
partial interface CanMakePaymentEvent {
  readonly attribute FrozenArray<PaymentDetailsModifier> modifiers;
};

// https://github.com/w3c/payment-handler/pull/389
// https://bugs.chromium.org/p/chromium/issues/detail?id=1207601
partial interface PaymentManager {
  Promise<undefined> enableDelegations(sequence<PaymentDelegation> delegations);
};

enum PaymentDelegation {
  "shippingAddress",
  "payerName",
  "payerPhone",
  "payerEmail"
};

partial dictionary PaymentRequestDetailsUpdate {
  sequence<PaymentShippingOption> shippingOptions;
  AddressErrors shippingAddressErrors;
};

partial interface PaymentRequestEvent {
  readonly attribute boolean requestBillingAddress;
  readonly attribute object? paymentOptions;
  readonly attribute FrozenArray<PaymentShippingOption>? shippingOptions;
  Promise<PaymentRequestDetailsUpdate?> changeShippingAddress(optional AddressInit shippingAddress = {});
  Promise<PaymentRequestDetailsUpdate?> changeShippingOption(DOMString shippingOption);

  // https://github.com/w3c/payment-handler/pull/393
  readonly attribute DOMString instrumentKey;
};

partial dictionary PaymentRequestEventInit {
  PaymentOptions paymentOptions;
  sequence<PaymentShippingOption> shippingOptions;
};

partial dictionary PaymentHandlerResponse {
  DOMString? payerName;
  DOMString? payerEmail;
  DOMString? payerPhone;
  AddressInit shippingAddress;
  DOMString? shippingOption;
};
