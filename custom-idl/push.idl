[Exposed=(Window,Worker), SecureContext]
interface PushRegistration {};

partial interface PushManager {
  Promise<boolean> hasPermission();
  Promise<PushRegistration> register();
  Promise<sequence<PushRegistration>> registrations();
  Promise<PushRegistration> unregister();
};

[Exposed=(Window,Worker), SecureContext]
interface PushRegistrationManager {
  Promise<PushRegistration> getRegistration();
  Promise<boolean> hasPermission();
  Promise<PushRegistration> register();
  Promise<PushRegistration> unregister();
};

partial interface PushSubscription {
  readonly attribute DOMString subscriptionId;
};
