interface WEBGL_compressed_texture_atc {};

partial interface WebGLRenderingContext {
  undefined commit();
};

// https://www.khronos.org/registry/webgl/specs/latest/2.0-compute/#webgl2-compute-context
interface WebGL2ComputeRenderingContextBase {
  const GLenum COMPUTE_SHADER = 0x91B9;
  const GLenum MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
  const GLenum MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
  const GLenum MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
  const GLenum MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
  const GLenum MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
  const GLenum MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
  const GLenum MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
  const GLenum MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
  const GLenum MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB;
  const GLenum MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
  const GLenum MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
  const GLenum COMPUTE_WORK_GROUP_SIZE = 0x8267;
  const GLenum DISPATCH_INDIRECT_BUFFER = 0x90EE;
  const GLenum DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
  const GLenum COMPUTE_SHADER_BIT = 0x00000020;
  const GLenum DRAW_INDIRECT_BUFFER = 0x8F3F;
  const GLenum DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
  const GLenum MAX_UNIFORM_LOCATIONS = 0x826E;
  const GLenum FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
  const GLenum FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
  const GLenum FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
  const GLenum FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
  const GLenum MAX_FRAMEBUFFER_WIDTH = 0x9315;
  const GLenum MAX_FRAMEBUFFER_HEIGHT = 0x9316;
  const GLenum MAX_FRAMEBUFFER_SAMPLES = 0x9318;
  const GLenum UNIFORM = 0x92E1;
  const GLenum UNIFORM_BLOCK = 0x92E2;
  const GLenum PROGRAM_INPUT = 0x92E3;
  const GLenum PROGRAM_OUTPUT = 0x92E4;
  const GLenum BUFFER_VARIABLE = 0x92E5;
  const GLenum SHADER_STORAGE_BLOCK = 0x92E6;
  const GLenum ATOMIC_COUNTER_BUFFER = 0x92C0;
  const GLenum TRANSFORM_FEEDBACK_VARYING = 0x92F4;
  const GLenum ACTIVE_RESOURCES = 0x92F5;
  const GLenum MAX_NAME_LENGTH = 0x92F6;
  const GLenum MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
  const GLenum NAME_LENGTH = 0x92F9;
  const GLenum TYPE = 0x92FA;
  const GLenum ARRAY_SIZE = 0x92FB;
  const GLenum OFFSET = 0x92FC;
  const GLenum BLOCK_INDEX = 0x92FD;
  const GLenum ARRAY_STRIDE = 0x92FE;
  const GLenum MATRIX_STRIDE = 0x92FF;
  const GLenum IS_ROW_MAJOR = 0x9300;
  const GLenum ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
  const GLenum BUFFER_BINDING = 0x9302;
  const GLenum BUFFER_DATA_SIZE = 0x9303;
  const GLenum NUM_ACTIVE_VARIABLES = 0x9304;
  const GLenum ACTIVE_VARIABLES = 0x9305;
  const GLenum REFERENCED_BY_VERTEX_SHADER = 0x9306;
  const GLenum REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
  const GLenum REFERENCED_BY_COMPUTE_SHADER = 0x930B;
  const GLenum TOP_LEVEL_ARRAY_SIZE = 0x930C;
  const GLenum TOP_LEVEL_ARRAY_STRIDE = 0x930D;
  const GLenum LOCATION = 0x930E;
  const GLenum VERTEX_SHADER_BIT = 0x00000001;
  const GLenum FRAGMENT_SHADER_BIT = 0x00000002;
  const GLenum ALL_SHADER_BITS = 0xFFFFFFFF;
  const GLenum ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
  const GLenum ATOMIC_COUNTER_BUFFER_START = 0x92C2;
  const GLenum ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
  const GLenum MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
  const GLenum MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
  const GLenum MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
  const GLenum MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
  const GLenum MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
  const GLenum MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
  const GLenum MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
  const GLenum MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
  const GLenum ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
  const GLenum UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
  const GLenum MAX_IMAGE_UNITS = 0x8F38;
  const GLenum MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
  const GLenum MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
  const GLenum MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
  const GLenum IMAGE_BINDING_NAME = 0x8F3A;
  const GLenum IMAGE_BINDING_LEVEL = 0x8F3B;
  const GLenum IMAGE_BINDING_LAYERED = 0x8F3C;
  const GLenum IMAGE_BINDING_LAYER = 0x8F3D;
  const GLenum IMAGE_BINDING_ACCESS = 0x8F3E;
  const GLenum IMAGE_BINDING_FORMAT = 0x906E;
  const GLenum VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
  const GLenum ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
  const GLenum UNIFORM_BARRIER_BIT = 0x00000004;
  const GLenum TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
  const GLenum SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
  const GLenum COMMAND_BARRIER_BIT = 0x00000040;
  const GLenum PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
  const GLenum TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
  const GLenum BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
  const GLenum FRAMEBUFFER_BARRIER_BIT = 0x00000400;
  const GLenum TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
  const GLenum ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
  const GLenum SHADER_STORAGE_BARRIER_BIT = 0x00002000;
  const GLenum ALL_BARRIER_BITS = 0xFFFFFFFF;
  const GLenum IMAGE_2D = 0x904D;
  const GLenum IMAGE_3D = 0x904E;
  const GLenum IMAGE_CUBE = 0x9050;
  const GLenum IMAGE_2D_ARRAY = 0x9053;
  const GLenum INT_IMAGE_2D = 0x9058;
  const GLenum INT_IMAGE_3D = 0x9059;
  const GLenum INT_IMAGE_CUBE = 0x905B;
  const GLenum INT_IMAGE_2D_ARRAY = 0x905E;
  const GLenum UNSIGNED_INT_IMAGE_2D = 0x9063;
  const GLenum UNSIGNED_INT_IMAGE_3D = 0x9064;
  const GLenum UNSIGNED_INT_IMAGE_CUBE = 0x9066;
  const GLenum UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
  const GLenum IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
  const GLenum IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
  const GLenum IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
  const GLenum READ_ONLY = 0x88B8;
  const GLenum WRITE_ONLY = 0x88B9;
  const GLenum READ_WRITE = 0x88BA;
  const GLenum SHADER_STORAGE_BUFFER = 0x90D2;
  const GLenum SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
  const GLenum SHADER_STORAGE_BUFFER_START = 0x90D4;
  const GLenum SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
  const GLenum MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
  const GLenum MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
  const GLenum MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
  const GLenum MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
  const GLenum MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
  const GLenum MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
  const GLenum SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
  const GLenum MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
  const GLenum DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
  const GLenum STENCIL_INDEX = 0x1901;
  const GLenum MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
  const GLenum MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
  const GLenum SAMPLE_POSITION = 0x8E50;
  const GLenum SAMPLE_MASK = 0x8E51;
  const GLenum SAMPLE_MASK_VALUE = 0x8E52;
  const GLenum TEXTURE_2D_MULTISAMPLE = 0x9100;
  const GLenum MAX_SAMPLE_MASK_WORDS = 0x8E59;
  const GLenum MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
  const GLenum MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
  const GLenum MAX_INTEGER_SAMPLES = 0x9110;
  const GLenum TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
  const GLenum TEXTURE_SAMPLES = 0x9106;
  const GLenum TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
  const GLenum TEXTURE_WIDTH = 0x1000;
  const GLenum TEXTURE_HEIGHT = 0x1001;
  const GLenum TEXTURE_DEPTH = 0x8071;
  const GLenum TEXTURE_INTERNAL_FORMAT = 0x1003;
  const GLenum TEXTURE_RED_SIZE = 0x805C;
  const GLenum TEXTURE_GREEN_SIZE = 0x805D;
  const GLenum TEXTURE_BLUE_SIZE = 0x805E;
  const GLenum TEXTURE_ALPHA_SIZE = 0x805F;
  const GLenum TEXTURE_DEPTH_SIZE = 0x884A;
  const GLenum TEXTURE_STENCIL_SIZE = 0x88F1;
  const GLenum TEXTURE_SHARED_SIZE = 0x8C3F;
  const GLenum TEXTURE_RED_TYPE = 0x8C10;
  const GLenum TEXTURE_GREEN_TYPE = 0x8C11;
  const GLenum TEXTURE_BLUE_TYPE = 0x8C12;
  const GLenum TEXTURE_ALPHA_TYPE = 0x8C13;
  const GLenum TEXTURE_DEPTH_TYPE = 0x8C16;
  const GLenum TEXTURE_COMPRESSED = 0x86A1;
  const GLenum SAMPLER_2D_MULTISAMPLE = 0x9108;
  const GLenum INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
  const GLenum UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
  const GLenum VERTEX_ATTRIB_BINDING = 0x82D4;
  const GLenum VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
  const GLenum VERTEX_BINDING_DIVISOR = 0x82D6;
  const GLenum VERTEX_BINDING_OFFSET = 0x82D7;
  const GLenum VERTEX_BINDING_STRIDE = 0x82D8;
  const GLenum VERTEX_BINDING_BUFFER = 0x8F4F;
  const GLenum MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
  const GLenum MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
  const GLenum MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;

  undefined dispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
  undefined dispatchComputeIndirect(GLintptr offset);

  undefined drawArraysIndirect(GLenum mode, GLintptr offset);
  undefined drawElementsIndirect(GLenum mode, GLenum type, GLintptr offset);

  undefined framebufferParameter(GLenum target, GLenum pname, GLint param);
  any getFramebufferParameter(GLenum target, GLenum pname);

  any getProgramInterfaceParameter(WebGLProgram program, GLenum programInterface, GLenum pname);
  any getProgramResource(WebGLProgram program, GLenum programInterface, GLuint index, GLenum props);
  GLuint getProgramResourceIndex(WebGLProgram program, GLenum programInterface, DOMString name);
  DOMString? getProgramResourceName(WebGLProgram program, GLenum programInterface, GLuint index);
  any getProgramResourceLocation(WebGLProgram program, GLenum programInterface, DOMString name);

  undefined programUniform1i(WebGLProgram? program, WebGLUniformLocation? location, GLint v0);
  undefined programUniform2i(WebGLProgram? program, WebGLUniformLocation? location, GLint v0, GLint v1);
  undefined programUniform3i(WebGLProgram? program, WebGLUniformLocation? location, GLint v0, GLint v1, GLint v2);
  undefined programUniform4i(WebGLProgram? program, WebGLUniformLocation? location, GLint v0, GLint v1, GLint v2, GLint v3);

  undefined programUniform1ui(WebGLProgram? program, WebGLUniformLocation? location, GLuint v0);
  undefined programUniform2ui(WebGLProgram? program, WebGLUniformLocation? location, GLuint v0, GLuint v1);
  undefined programUniform3ui(WebGLProgram? program, WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2);
  undefined programUniform4ui(WebGLProgram? program, WebGLUniformLocation? location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

  undefined programUniform1f(WebGLProgram? program, WebGLUniformLocation? location, GLfloat v0);
  undefined programUniform2f(WebGLProgram? program, WebGLUniformLocation? location, GLfloat v0, GLfloat v1);
  undefined programUniform3f(WebGLProgram? program, WebGLUniformLocation? location, GLfloat v0, GLfloat v1, GLfloat v2);
  undefined programUniform4f(WebGLProgram? program, WebGLUniformLocation? location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

  undefined programUniform1iv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Int32List data);
  undefined programUniform2iv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Int32List data);
  undefined programUniform3iv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Int32List data);
  undefined programUniform4iv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Int32List data);

  undefined programUniform1uiv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Uint32List data);
  undefined programUniform2uiv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Uint32List data);
  undefined programUniform3uiv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Uint32List data);
  undefined programUniform4uiv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Uint32List data);

  undefined programUniform1fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Float32List data);
  undefined programUniform2fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Float32List data);
  undefined programUniform3fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Float32List data);
  undefined programUniform4fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, Float32List data);

  undefined programUniformMatrix2fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix3fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix4fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix2x3fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix3x2fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix2x4fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix4x2fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix3x4fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);
  undefined programUniformMatrix4x3fv(WebGLProgram? program, WebGLUniformLocation? location, GLsizei count, GLboolean transpose, Float32List data);

  undefined bindImageTexture(GLuint unit, WebGLTexture? texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);

  undefined memoryBarrier(GLbitfield barriers);
  undefined memoryBarrierByRegion(GLbitfield barriers);

  undefined texStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
  any getTexLevelParameter(GLenum target, GLint level, GLenum pname);
  any getMultisample(GLenum pname, GLuint index);
  undefined sampleMask(GLuint index, GLbitfield mask);

  undefined bindVertexBuffer(GLuint bindingindex, WebGLBuffer? buffer, GLintptr offset, GLsizei stride);
  undefined vertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
  undefined vertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
  undefined vertexAttribBinding(GLuint attribindex, GLuint bindingindex);
  undefined vertexBindingDivisor(GLuint bindingindex, GLuint divisor);
};

interface WebGL2ComputeRenderingContext : WebGL2ComputeRenderingContextBase {};
