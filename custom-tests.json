{
  "api": {
    "ANGLE_instanced_arrays": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('ANGLE_instanced_arrays');"
    },
    "AnalyserNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createAnalyser();"
    },
    "AudioBuffer": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createBuffer(2, audioCtx.sampleRate * 3, audioCtx.sampleRate);"
    },
    "AudioBufferSourceNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createBufferSource();"
    },
    "AudioContext": {
      "__TODO": "Separate into different prefix variations when able",
      "__base": "var instance = new (window.AudioContext || window.webkitAudioContext)();"
    },
    "AudioDestinationNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.destination;"
    },
    "AudioListener": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.listener;"
    },
    "AudioNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createAnalyser();"
    },
    "AudioParam": {
      "__base": "<%api.GainNode:gainNode%> var instance = gainNode.gain;"
    },
    "AudioParamMap": {
      "__TODO": "DEPENDS ON PROMISE TESTING SUPPORT",
      "__base.disabled": "<%api.AudioWorkletNode:worklet%> if (!worklet) {return false}; var instance = worklet.parameters;"
    },
    "AudioTrack": {
      "__resources": {
        "audio-blip": {
          "type": "audio",
          "src": "/media/blip.mp3"
        }
      },
      "__base": "<%api.AudioTrackList:audioTracks%> if (!audioTracks) {return false}; var instance = audioTracks[0];"
    },
    "AudioTrackList": {
      "__resources": {
        "audio-blip": {
          "type": "audio",
          "src": "/media/blip.mp3"
        }
      },
      "__base": "var el = document.getElementById('resource-audio-blip'); var instance = el.audioTracks;"
    },
    "AudioWorkletNode": {
      "__TODO": "DEPENDS ON PROMISE TESTING SUPPORT",
      "__base.disabled": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; await audioCtx.audioWorklet.addModule('/resources/custom-tests/api/AudioWorkletNode/WhiteNoiseProcessor.js'); var instance = new AudioWorkletNode(audioCtx, 'white-noise-processor');"
    },
    "BiquadFilterNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createBiquadFilter();"
    },
    "ChannelMergerNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createChannelMerger();"
    },
    "ChannelSplitterNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createChannelSplitter();"
    },
    "ConstantSourceNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createConstantSource();"
    },
    "ConvolverNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createConvolver();"
    },
    "DelayNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createDelay();"
    },
    "Document": {
      "__base": "var instance = document;"
    },
    "DOMTokenList": {
      "__additional": {
        "trim_whitespace": "var elm = document.createElement('b'); elm.className = ' foo bar foo '; elm.classList.remove('bar'); return elm.className === 'foo foo' || elm.className === 'foo';",
        "remove_duplicates": "var elm = document.createElement('b'); elm.className = ' foo bar foo '; elm.classList.remove('bar'); return elm.className === 'foo';"
      }
    },
    "DynamicsCompressorNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createDynamicsCompressor();"
    },
    "EXT_blend_minmax": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_blend_minmax');"
    },
    "EXT_color_buffer_float": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_color_buffer_float');"
    },
    "EXT_color_buffer_half_float": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_color_buffer_half_float');"
    },
    "EXT_disjoint_timer_query": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_disjoint_timer_query');"
    },
    "EXT_float_blend": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_float_blend');"
    },
    "EXT_frag_depth": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_frag_depth');"
    },
    "EXT_shader_texture_lod": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_shader_texture_lod');"
    },
    "EXT_sRGB": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_sRGB');"
    },
    "EXT_texture_compression_bptc": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_texture_compression_bptc');"
    },
    "EXT_texture_compression_rgtc": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_texture_compression_rgtc');"
    },
    "EXT_texture_filter_anisotropic": {
      "__base": "var canvas = document.createElement('canvas'); if (!canvas) {return false}; var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl'); if (!gl) {return false}; var instance = gl.getExtension('EXT_texture_filter_anisotropic');"
    },
    "GainNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createGain();"
    },
    "IIRFilterNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createIIRFilter();"
    },
    "MediaDevices": {
      "__base": "var instance = navigator.mediaDevices;"
    },
    "Navigator": {
      "__base": "var instance = window.navigator;"
    },
    "NodeIterator": {
      "__base": "var instance = document.createNodeIterator(document);"
    },
    "OscillatorNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createOscillator();"
    },
    "PannerNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createPanner();"
    },
    "StereoPannerNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createStereoPanner();"
    },
    "TreeWalker": {
      "__base": "var instance = document.createTreeWalker(document);"
    },
    "WaveShaperNode": {
      "__base": "<%api.AudioContext:audioCtx%> if (!audioCtx) {return false}; var instance = audioCtx.createWaveShaper();"
    },
    "Window": {
      "__base": "var instance = window;"
    }
  },
  "css": {
    "properties": {
      "custom-property": "return CSS.supports('color', 'var(--foo)') || CSS.supports('color', 'env(--foo)');"
    }
  }
}
